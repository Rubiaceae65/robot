<launch>

  <!-- Localization-only mode -->
  <arg name="localization"      default="false"/>
  <arg     if="$(arg localization)" name="rtabmap_args"  default=""/>
  <arg unless="$(arg localization)" name="rtabmap_args"  default="--delete_db_on_start"/>  
<!--
  <group ns="planner">
     <remap from="scan" to="/base_scan"/>
     <remap from="obstacles_cloud" to="/obstacles_cloud"/>
     <remap from="ground_cloud" to="/ground_cloud"/>
     <remap from="map" to="/map"/>
     <remap from="move_base_simple/goal" to="/planner_goal"/>
    --> 

     <arg name="observation_sources" value="point_cloud_sensorA point_cloud_sensorB"/>   

     <node pkg="move_base" type="move_base" respawn="true" name="move_base" output="screen">
        <param name="base_global_planner" value="navfn/NavfnROS"/>
    	<rosparam file="$(env ROS_WS)/src/robot_launch/config/costmap_common_params_2d.yaml" command="load" ns="global_costmap" />
     	<rosparam file="$(env ROS_WS)/src/robot_launch/config/costmap_common_params_2d.yaml" command="load" ns="local_costmap" />
    	<rosparam file="$(env ROS_WS)/src/robot_launch/config/local_costmap_params.yaml" command="load" ns="local_costmap" />
    	<rosparam file="$(env ROS_WS)/src/robot_launch/config/global_costmap_params.yaml" command="load" ns="global_costmap"/>
    	<rosparam file="$(env ROS_WS)/src/robot_launch/config/base_local_planner_params.yaml" command="load" />
      <!--
        <param name="global_costmap/obstacle_layer/observation_sources" value="$(arg observation_sources)"/>
        <param name="local_costmap/obstacle_layer/observation_sources" value="$(arg observation_sources)"/>
        -->
        <param name="global_costmap/obstacle_layer/observation_sources" value=""/>
        <param name="local_costmap/obstacle_layer/observation_sources" value=""/>

     </node>
   		
<!--     <param name="cmd_vel/abtr_priority" value="10"/> -->
  <!--</group>-->



  <group ns="camera">
    <node pkg="nodelet" type="nodelet" name="data_throttle" args="load rtabmap_ros/data_throttle camera_nodelet_manager">
      <param name="rate" type="double" value="5"/>
      <param name="decimation" type="int" value="2"/>
   
      <remap from="rgb/image_in"       to="rgb/image_rect_color"/>
      <remap from="depth/image_in"     to="depth_registered/image_raw"/>
      <remap from="rgb/camera_info_in" to="depth_registered/camera_info"/>
    
      <remap from="rgb/image_out"       to="data_resized_image"/>
      <remap from="depth/image_out"     to="data_resized_image_depth"/>
      <remap from="rgb/camera_info_out" to="data_resized_camera_info"/>
    </node>

    <!-- for the planner -->
    <node pkg="nodelet" type="nodelet" name="points_xyz_planner" args="load rtabmap_ros/point_cloud_xyz camera_nodelet_manager">
      <remap from="depth/image"            to="data_resized_image_depth"/>
      <remap from="depth/camera_info"      to="data_resized_camera_info"/>
      <remap from="cloud"                  to="cloudXYZ" />
      <param name="decimation" type="int" value="1"/>                     <!-- already decimated above -->
      <param name="max_depth"  type="double" value="3.0"/>
      <param name="voxel_size" type="double" value="0.02"/>
    </node>
  
    <node pkg="nodelet" type="nodelet" name="obstacles_detection" args="load rtabmap_ros/obstacles_detection camera_nodelet_manager">
      <remap from="cloud"     to="cloudXYZ"/>
      <remap from="obstacles" to="/obstacles_cloud"/>
      <remap from="ground"    to="/ground_cloud"/>

      <param name="frame_id"             type="string" value="base_footprint"/>		
      <param name="map_frame_id"         type="string" value="map"/>
      <param name="wait_for_transform"   type="bool" value="true"/>
      <param name="min_cluster_size"     type="int" value="20"/>
      <param name="max_obstacles_height" type="double" value="0.4"/>
    </node>  
  </group>

</launch>
