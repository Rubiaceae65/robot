<?xml version="1.0"?>
<!-- This is a hand-made URDF XACRO file for the Microsoft Kinect-2 sensor (Xbox ONE) -->
<!-- Copyright Universitaet Bremen - Instititute for Artificial Intelligence. Author: Alexis Maldonado -->
<!-- License: GPLv3+ -->

<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="kinect2"> 

  <xacro:macro name="kinect2" params="prefix parent">

    <material name="Kinect2Grey">
      <color rgba="0.15 0.15 0.15 1.0"/>
    </material>


    <!-- Joint connecting the parent to our frame_in -->
    <joint name="${prefix}_kinect2_in_joint" type="fixed">
      <!--<origin xyz="0 0 0.54" rpy="1.5708 3.14159 1.5708" />-->

      <!-- <xacro:insert_block name="origin"/> -->
      <parent link="${parent}"/>
      <child link="${prefix}_kinect2_rgb_optical_frame"/>
    </joint>

    <link name="${prefix}_kinect2_rgb_optical_frame">
      <visual>
     		<!--<origin xyz="0 0 0" rpy="1.5708 3.14159 1.5708" />-->

        <!--<origin rpy="0 0 0" xyz="0 0 0"/>-->
        <geometry>
          <!-- these meshes were exported in mm, so scale back to m 
          the mesh has to be turned (camera works fine):      		<origin xyz="0 0 0.54" rpy="1.5708 3.14159 1.5708" />

          -->
          <mesh filename="package://robot_launch/meshes/kinect2_origin_on_rgb_optical_frame.stl" scale="0.001 0.001 0.001"/>
        </geometry>
        <material name="Kinect2Grey"/>
      </visual>

      <collision>
      		<!--<origin xyz="0 0 0" rpy="1.5708 3.14159 1.5708" />-->


        <geometry>
          <mesh
            filename="package://robot_launch/meshes/kinect2_origin_on_rgb_optical_frame.stl" scale="0.001 0.001 0.001"/>
        </geometry>
      </collision>
    </link>

    <joint name="${prefix}_kinect2_ir_joint" type="fixed">
      <parent link="${prefix}_kinect2_rgb_optical_frame"/>
      <child link="${prefix}_kinect2_ir_optical_frame"/>
    </joint>

    <link name="${prefix}_kinect2_ir_optical_frame">
    </link>

        <gazebo reference="${prefix}_kinect2_ir_optical_frame">
            <sensor name="${prefix}_sensor" type="depth">
                <visualize>true</visualize>
                <always_on>true</always_on>
                <update_rate>30.0</update_rate>
                <camera>
                    <horizontal_fov>${70.0*3.14/180.0}</horizontal_fov>
                    <image>
                        <width>512</width>
                        <height>424</height>
                        <format>L8</format>
                    </image>
                    <clip>
                        <near>0.1</near>
                        <far>8.0</far>
                    </clip>
                    <noise>
                        <!-- Noise is sampled independently per pixel on each frame.
                        That pixel's noise value is added to each of its color
                        channels, which at that point lie in the range [0,1]. -->
                        <type>gaussian</type>
                        <mean>0.0</mean>
                        <stddev>0.001</stddev>
                    </noise>
                </camera>
                <plugin name="${prefix}_sensor_controller"                        filename="libgazebo_ros_openni_kinect.so">
                    <cameraName>/ir/</cameraName>
                    <alwaysOn>true</alwaysOn>
                    <updateRate>30.0</updateRate>
                    <imageTopicName>image_ir_rect</imageTopicName>
                    <depthImageTopicName>image_depth_rect</depthImageTopicName>
                    <pointCloudTopicName>points</pointCloudTopicName>
                    <cameraInfoTopicName>camera_info</cameraInfoTopicName>
                    <!--<depthImageCameraInfoTopicName>depth/camera_info</depthImageCameraInfoTopicName>-->
                    <frameName>${prefix}_kinect2_ir_optical_frame</frameName>
                    <pointCloudCutoff>0.5</pointCloudCutoff>
                    <pointCloudCutoffMax>4.5</pointCloudCutoffMax>
                    <baseline>0.1</baseline>
                    <distortionK1>0.0</distortionK1>
                    <distortionK2>0.0</distortionK2>
                    <distortionK3>0.0</distortionK3>
                    <distortionT1>0.0</distortionT1>
                    <distortionT2>0.0</distortionT2>
                    <!--<robotNamespace>${prefix}</robotNamespace>-->
                </plugin>
            </sensor>
        </gazebo>
        
        <gazebo reference="${prefix}_kinect2_rgb_optical_frame">
            <sensor name="${prefix}_camera" type="camera">
                <visualize>true</visualize>

                <always_on>true</always_on>
                <update_rate>30.0</update_rate>
                <camera name="${prefix}_camera">
                    <horizontal_fov>${70.0*3.14/180.0}</horizontal_fov>
                    <image>
                        <width>512</width>
                        <height>424</height>
                        <!--<width>1920</width>
                        <height>1080</height>-->
                        <format>R8G8B8</format>
                    </image>
                    <clip>
                        <near>0.02</near>
                        <far>10.0</far>
                    </clip>
                    <noise>
                        <type>gaussian</type>
                        <mean>0.0</mean>
                        <stddev>0.007</stddev>
                    </noise>
                </camera>
                <plugin name="${prefix}_camera_controller"
                        filename="libgazebo_ros_camera.so">
                    <alwaysOn>true</alwaysOn>
                    <update_rate>30.0</update_rate>
                    <cameraName>/sd/</cameraName>
                    <imageTopicName>image_color_rect</imageTopicName>
                    <cameraInfoTopicName>camera_info</cameraInfoTopicName>
                    <frameName>${prefix}_kinect2_rgb_optical_frame</frameName>
                    <baseline>0.1</baseline>
                    <distortionK1>0.0</distortionK1>
                    <distortionK2>0.0</distortionK2>
                    <distortionK3>0.0</distortionK3>
                    <distortionT1>0.0</distortionT1>
                    <distortionT2>0.0</distortionT2>
                    <!--<robotNamespace>${prefix}</robotNamespace>-->
                </plugin>
            </sensor>
        </gazebo>

  </xacro:macro>
</robot>
