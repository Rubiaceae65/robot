<?xml version="1.0"?>


<robot name="test" xmlns:xacro="http://ros.org/wiki/xacro">

  <xacro:macro name="cylinder_inertia" params="m r h">
    <inertial>
      <mass value="${m}"/>
      <inertia ixx="${m*(3*r*r+h*h)/12}" ixy = "0" ixz = "0" iyy="${m*(3*r*r+h*h)/12}" iyz = "0" izz="${m*r*r/2}"/> 
    </inertial>
  </xacro:macro>

 
  <xacro:macro name="box_inertia" params="m w h d">
    <inertial>
      <mass value="${m}"/>
      <inertia ixx="${m / 12.0 * (d*d + h*h)}" ixy="0.0" ixz="0.0" iyy="${m / 12.0 * (w*w + h*h)}" iyz="0.0" izz="${m / 12.0 * (w*w + d*d)}"/>
    </inertial>
  </xacro:macro>

<!--kilos lengte breedte hoogte-->
<xacro:macro name="box" params="m w h d">
    <visual>
      <geometry>
        <box size="${w} ${h} ${d}"/>
      </geometry>
      <material name="Cyan">
        <color rgba="0 1.0 1.0 1.0"/>
      </material>

    </visual>
    <collision>
      <geometry>
        <box size="${w} ${h} ${d}"/>
      </geometry>
    </collision>


    <inertial>
      <mass value="${m}"/>
      <inertia ixx="${m / 12.0 * (d*d + h*h)}" ixy="0.0" ixz="0.0" iyy="${m / 12.0 * (w*w + h*h)}" iyz="0.0" izz="${m / 12.0 * (w*w + d*d)}"/>
    </inertial>

    <!--    <xacro:box_inertia m="${m}" w="${w}" h="${h}" d="${d}"/> -->
</xacro:macro>

  <xacro:include filename="$(find robot_launch)/urdf/materials.urdf"/>

  <xacro:property name="base_width" value="0.38"/>
  <xacro:property name="base_length" value="0.910"/>
  <xacro:property name="base_height" value="0.01"/>
  <xacro:property name="base_xoff" value="0.20"/>
  <xacro:property name="base_zoff" value="0.02"/>


  <xacro:property name="bar_height" value="0.540"/>


  <xacro:property name="wheel_radius" value="0.085"/>
  <xacro:property name="wheel_width" value="0.05"/>
  <xacro:property name="wheel_ygap" value="0.045"/>
  <xacro:property name="wheel_zoff" value="0.0"/>
  <xacro:property name="wheel_xoff" value="0.0"/>

  <xacro:property name="caster_xoff" value="0.14"/>


<link name="dummy">
   </link>


  <joint name="dummy_joint" type="fixed">
     <parent link="dummy"/>
     <child link="base_link"/>
  </joint>

  <!-- Robot Base -->
  <link name="base_link">
  <!-- middle in between wheels -->
  <!--
    <visual>
      <geometry>
        <box size="0.1 ${base_width} 0.1"/>
      </geometry>
     <material name="Gray">  <color rgba="0.5 0.5 0.5 1.0"/>    </material>
    </visual>
    -->
    <xacro:box m="1" w="0.1" h="${base_width}" d="0.1"/>

  </link>

  <link name="box_link">
  <!--
    <visual>
      <geometry>
        <box size="${base_length} ${base_width} ${base_height}"/>
      </geometry>
      <material name="Black" />
    </visual>
    -->
    <xacro:box m="5" w="${base_length}" h="${base_width}" d="${base_height}"/>
  </link>

    <joint name="box_joint" type="fixed">
      <parent link="base_link"/>
      <child link="box_link"/>
      <origin xyz="${base_length / 2 - base_xoff} 0 0" rpy="0 0 0"/>
    </joint>

 <link name="sensorbar_link">
     <xacro:box m="5" w="0.04" h="${base_width}" d="0.04"/>
  </link>
  <gazebo reference="sensorbar_link">

  </gazebo>

    <joint name="sensorbar_joint" type="fixed">
      <parent link="base_link"/>
      <child link="sensorbar_link"/>
      <origin xyz="0 0 ${bar_height}" rpy="0 0 0"/>
    </joint>


<!--
  <xacro:include filename="$(find robot_launch)/urdf/sensors/kinect2.urdf.xacro" />
  <xacro:kinect2 parent="base_link" name="KinectSensor2">
    <origin xyz="0 0 ${bar_height}" rpy="0 0 0" />
  </xacro:kinect2>
-->

<joint name="gps_joint" type="fixed">
    <origin xyz="0 0.2 0" rpy="0 0 0" />
    <parent link="sensorbar_link" />
    <child link="gps" />
</joint>

<link name="gps"> 
  <visual> 
    <geometry> 
    <box size="0.02 0.035 0.002"/> 
    </geometry> <material name="Green"/> 
  </visual> 

  <inertial> 
    <mass value="0.001"/> <origin xyz="0 0 0"/> 
    <inertia ixx="0.0001" ixy="0.0" ixz="0.0" iyy="0.0001" iyz="0.0" izz="0.0001"/> 
  </inertial> 
</link>

  <gazebo reference="gps">
    <plugin name="gazebo_ros_gps" filename="libhector_gazebo_ros_gps.so">
      <updateRate>4.0</updateRate>
      <bodyName>gps_link</bodyName>
      <frameId>gps_link</frameId>
      <topicName>/gps/fix</topicName>
      <velocityTopicName>/gps/fix_velocity</velocityTopicName>
      <referenceLatitude>-30.06022459407145675</referenceLatitude>
      <referenceLongitude>-51.173913575780311191</referenceLongitude>
      <referenceHeading>90</referenceHeading>
      <referenceAltitude>10</referenceAltitude>
      <offset>0 0 0</offset>
      <drift>0.001 0.001 0.001</drift>
      <gaussianNoise>0.05 0.05 0.05</gaussianNoise>
      <velocityDrift>0.001 0.001 0.001</velocityDrift>
      <velocityGaussianNoise>0.5 0.5 0.5</velocityGaussianNoise>
    </plugin>
  </gazebo>

<joint name="laser_joint" type="fixed">
    <origin xyz="0 0.2 0" rpy="0 0 0" />
    <parent link="sensorbar_link" />
    <child link="laser" />
</joint>

<link name="laser"> 
  <visual> 
    <geometry> 
    <box size="0.02 0.035 0.002"/> 
    </geometry> <material name="Green"/> 
  </visual> 

  <inertial> 
    <mass value="0.001"/> <origin xyz="0 0 0"/> 
    <inertia ixx="0.0001" ixy="0.0" ixz="0.0" iyy="0.0001" iyz="0.0" izz="0.0001"/> 
  </inertial> 
</link>

<gazebo reference="laser">

    <sensor type="ray" name="laser">
      <pose>0 0 0 0 0 0</pose>
      <visualize>true</visualize>
      <update_rate>40</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-1.570796</min_angle>
            <max_angle>1.570796</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>30.0</max>
          <resolution>0.01</resolution>
        </range>
<!-- Noise parameters based on published spec for Hokuyo laser
               achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
               stddev of 0.01m will put 99.7% of samples within 0.03m of the true
               reading. -->

        <!--
        <noise>
          <type>gaussian</type>
                    <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
        -->
      </ray>
      <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
        <topicName>/rrbot/laser/scan</topicName>
        <frameName>laser</frameName>
      </plugin>
    </sensor>
</gazebo>



<joint name="ir_front_joint" type="fixed">
    <axis xyz="0 1 0" />
    <origin rpy="0 0 0" xyz="0.5 0 0" />
    <parent link="sensorbar_link"/>
    <child link="base_ir_front"/>
</joint>
<link name="base_ir_front">
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="0.01 0.01 0.01"/>
      </geometry>
    </collision>
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="0.01 0.01 0.01"/>
      </geometry>
    </visual>
    <inertial>
      <mass value="1e-5" />
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0"      izz="1e-6" />
    </inertial>
</link>
<joint name="sonar_front_joint" type="fixed">
    <axis xyz="0 1 0" />
    <origin rpy="0 0 0" xyz="0.5 0 0.25" />
    <parent link="sensorbar_link"/>
    <child link="base_sonar_front"/>
</joint>
<link name="base_sonar_front">
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="0.01 0.01 0.01"/>
      </geometry>
    </collision>
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="0.01 0.01 0.01"/>
      </geometry>
    </visual>
    <inertial>
      <mass value="1e-5" />
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
    </inertial>
 </link>

  <xacro:include filename="$(find robot_launch)/urdf/imu.urdf.xacro" />
        <!-- The following kinect2_xacro defines the _kinect2_rgb_optical_frame
        And includes the fixed joint  -->
        <xacro:imu_sensor parent="sensorbar_link" xyz="0 0 0" rpy="0 0 0">
        </xacro:imu_sensor>

<!--          The following kinect2_xacro defines the _kinect2_rgb_optical_frame
        And includes the fixed joint  
  <xacro:include filename="$(find robot_launch)/urdf/kinect2.urdf.xacro" />
        <xacro:kinect2 parent="base_link" prefix="kinect">
      		<origin xyz="0 0 0.54" rpy="1.5708 3.14159 1.5708" />
        </xacro:kinect2>
-->
  <xacro:include filename="$(find robot_launch)/urdf/sensors/kinect2.urdf.xacro" />
  
  <xacro:kinect2 parent="sensorbar_link" name="KinectSensor2">
   <!-- <origin xyz="0 0 0.54" rpy="1.5708 3.14159 1.5708" /> -->
    <origin xyz="0 0 0.54" rpy="0 0 0" />

  </xacro:kinect2>
  
  <!-- Robot Footprint -->
  
  <link name="base_footprint">
  <inertial>
         <mass value="10"/>
         <inertia ixx="0.4" ixy="0.0" ixz="0.0" iyy="0.4" iyz="0.0" izz="0.2"/>
   </inertial>

  </link>

  <joint name="base_joint" type="fixed">
    <parent link="base_link"/>
    <child link="base_footprint"/>
    <origin xyz="0.0 0.0 ${-(wheel_radius+wheel_zoff)}" rpy="0 0 0"/>
  </joint>


    <!-- Wheels -->
  <xacro:macro name="wheel" params="prefix x_reflect y_reflect">
    <link name="${prefix}_link">
      <collision>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
        <geometry>
            <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
        </geometry>
      </collision>  
      <visual>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
        <geometry>
            <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
        </geometry>
        <material name="Gray">  <color rgba="0.5 0.5 0.5 1.0"/>    </material>
      </visual>
    <xacro:cylinder_inertia m="1" r="${wheel_radius}" h="${wheel_width}"/>

    </link>

    <joint name="${prefix}_joint" type="continuous">
      <parent link="base_link"/>
      <child link="${prefix}_link"/>
      <origin xyz="${x_reflect*wheel_xoff} ${y_reflect*(base_width/2+wheel_ygap)} ${-wheel_zoff}" rpy="0 0 0"/>
      <axis xyz="0 1 0"/>
    </joint>
  </xacro:macro>

  <xacro:wheel prefix="left_wheel" x_reflect="-1" y_reflect="1" />
  <xacro:wheel prefix="right_wheel" x_reflect="-1" y_reflect="-1" />

<!--Gazebo Differential Drive Plugin-->
<gazebo>
  <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
    <alwaysOn>true</alwaysOn>
    <legacyMode>false</legacyMode>
    <updateRate>40</updateRate>
    <leftJoint>left_wheel_joint</leftJoint>
    <rightJoint>right_wheel_joint</rightJoint>
    <wheelSeparation>${base_width + wheel_ygap}</wheelSeparation>
    <wheelDiameter>${wheel_radius * 2}</wheelDiameter>
    <torque>200</torque>
    <commandTopic>cmd_vel</commandTopic>
    <odometryTopic>odom</odometryTopic>
    <odometryFrame>odom</odometryFrame>
    <robotBaseFrame>base_link</robotBaseFrame>
  </plugin>
</gazebo>


    <!-- Caster Wheel -->
  
  <link name="front_caster">
    <visual>
      <geometry>
        <sphere radius="${(wheel_radius+wheel_zoff-(base_height/2))}"/>
      </geometry>
      <material name="Cyan">
        <color rgba="0 1.0 1.0 1.0"/>
      </material>
    </visual>
  </link>

  <joint name="caster_joint" type="fixed">
    <parent link="base_link"/>
    <child link="front_caster"/>
    <origin xyz="${caster_xoff} 0.0 0.1" rpy="0 0 0"/>
  </joint>


      <gazebo>
        <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
          <robotNamespace>/</robotNamespace>
        </plugin>
      </gazebo>

</robot>